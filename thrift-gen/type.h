/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>


enum AuthLoginPartner {
  AuthLoginPartner_AUTH_PARTNER_DOUBAN = 1,
  AuthLoginPartner_AUTH_PARTNER_SINA = 2,
  AuthLoginPartner_AUTH_PARTNER_TENCENT = 3,
  AuthLoginPartner_AUTH_PARTNER_RENREN = 4,
  AuthLoginPartner_AUTH_PARTNER_KAIXIN = 5,
  AuthLoginPartner_AUTH_PARTNER_163 = 6,
  AuthLoginPartner_AUTH_PARTNER_FANFOU = 7
};

enum AuthResponseStatus {
  AuthResponseStatus_AUTH_SUCCESS = 0,
  AuthResponseStatus_AUTH_FAIL_REASON_UNKNOWN = 1,
  AuthResponseStatus_AUTH_FAIL_SERVER_ERROR = 2,
  AuthResponseStatus_AUTH_FAIL_CLIENT_KEY_NOT_AUTHORIZED = 3,
  AuthResponseStatus_AUTH_FAIL_CLIENT_SECRET_WRONG = 4,
  AuthResponseStatus_AUTH_FAIL_ID_NOT_EXIST = 5,
  AuthResponseStatus_AUTH_FAIL_ID_INVALID = 6,
  AuthResponseStatus_AUTH_FAIL_PASSWORD_WRONG = 7
};

enum UserLinkType {
  UserLinkType_USER_LINK_TYPE_UNKNOWN = 0,
  UserLinkType_USER_LINK_TYPE_42QU = 1,
  UserLinkType_USER_LINK_TYPE_DOUBAN = 2,
  UserLinkType_USER_LINK_TYPE_WEIBO = 3
};

enum UserPhoneType {
  UserPhoneType_USER_PHONE_TYPE_UNKNOWN = 0,
  UserPhoneType_USER_PHONE_TYPE_PUBLIC = 1,
  UserPhoneType_USER_PHONE_TYPE_CUSTOM = 2,
  UserPhoneType_USER_PHONE_TYPE_MOBILE = 3,
  UserPhoneType_USER_PHONE_TYPE_HOME = 4,
  UserPhoneType_USER_PHONE_TYPE_BUSINESS = 5,
  UserPhoneType_USER_PHONE_TYPE_FAX = 6
};

enum UserMailType {
  UserMailType_USER_MAIL_TYPE_UNKNOWN = 0,
  UserMailType_USER_MAIL_TYPE_PUBLIC = 1,
  UserMailType_USER_MAIL_TYPE_CUSTOM = 2,
  UserMailType_USER_MAIL_TYPE_HOME = 3,
  UserMailType_USER_MAIL_TYPE_BUSINESS = 4
};

enum TaskCid {
  TaskCid_TASK_CID_EVENT = 1
};

typedef int64_t timestamp;

@interface AuthRequestMail : NSObject <NSCoding> {
  NSString * __client_id;
  NSString * __client_secret;
  NSString * __mail;
  NSString * __password;

  BOOL __client_id_isset;
  BOOL __client_secret_isset;
  BOOL __mail_isset;
  BOOL __password_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=client_id, setter=setClient_id:) NSString * client_id;
@property (nonatomic, retain, getter=client_secret, setter=setClient_secret:) NSString * client_secret;
@property (nonatomic, retain, getter=mail, setter=setMail:) NSString * mail;
@property (nonatomic, retain, getter=password, setter=setPassword:) NSString * password;
#endif

- (id) initWithClient_id: (NSString *) client_id client_secret: (NSString *) client_secret mail: (NSString *) mail password: (NSString *) password;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) client_id;
- (void) setClient_id: (NSString *) client_id;
- (BOOL) client_idIsSet;

- (NSString *) client_secret;
- (void) setClient_secret: (NSString *) client_secret;
- (BOOL) client_secretIsSet;

- (NSString *) mail;
- (void) setMail: (NSString *) mail;
- (BOOL) mailIsSet;

- (NSString *) password;
- (void) setPassword: (NSString *) password;
- (BOOL) passwordIsSet;

@end

@interface AuthRequestPartner : NSObject <NSCoding> {
  NSString * __client_id;
  NSString * __client_secret;
  int __partner;
  NSString * __access_token;
  NSString * __mail;

  BOOL __client_id_isset;
  BOOL __client_secret_isset;
  BOOL __partner_isset;
  BOOL __access_token_isset;
  BOOL __mail_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=client_id, setter=setClient_id:) NSString * client_id;
@property (nonatomic, retain, getter=client_secret, setter=setClient_secret:) NSString * client_secret;
@property (nonatomic, getter=partner, setter=setPartner:) int partner;
@property (nonatomic, retain, getter=access_token, setter=setAccess_token:) NSString * access_token;
@property (nonatomic, retain, getter=mail, setter=setMail:) NSString * mail;
#endif

- (id) initWithClient_id: (NSString *) client_id client_secret: (NSString *) client_secret partner: (int) partner access_token: (NSString *) access_token mail: (NSString *) mail;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) client_id;
- (void) setClient_id: (NSString *) client_id;
- (BOOL) client_idIsSet;

- (NSString *) client_secret;
- (void) setClient_secret: (NSString *) client_secret;
- (BOOL) client_secretIsSet;

- (int) partner;
- (void) setPartner: (int) partner;
- (BOOL) partnerIsSet;

- (NSString *) access_token;
- (void) setAccess_token: (NSString *) access_token;
- (BOOL) access_tokenIsSet;

- (NSString *) mail;
- (void) setMail: (NSString *) mail;
- (BOOL) mailIsSet;

@end

@interface AuthResponse : NSObject <NSCoding> {
  int64_t __id;
  NSString * __name;
  NSString * __access_token;
  NSString * __refresh_token;
  int64_t __expire_time;

  BOOL __id_isset;
  BOOL __name_isset;
  BOOL __access_token_isset;
  BOOL __refresh_token_isset;
  BOOL __expire_time_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int64_t id;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=access_token, setter=setAccess_token:) NSString * access_token;
@property (nonatomic, retain, getter=refresh_token, setter=setRefresh_token:) NSString * refresh_token;
@property (nonatomic, getter=expire_time, setter=setExpire_time:) int64_t expire_time;
#endif

- (id) initWithId: (int64_t) id name: (NSString *) name access_token: (NSString *) access_token refresh_token: (NSString *) refresh_token expire_time: (int64_t) expire_time;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int64_t) id;
- (void) setId: (int64_t) id;
- (BOOL) idIsSet;

- (NSString *) name;
- (void) setName: (NSString *) name;
- (BOOL) nameIsSet;

- (NSString *) access_token;
- (void) setAccess_token: (NSString *) access_token;
- (BOOL) access_tokenIsSet;

- (NSString *) refresh_token;
- (void) setRefresh_token: (NSString *) refresh_token;
- (BOOL) refresh_tokenIsSet;

- (int64_t) expire_time;
- (void) setExpire_time: (int64_t) expire_time;
- (BOOL) expire_timeIsSet;

@end

@interface UserLink : NSObject <NSCoding> {
  int64_t __id;
  int __type;
  NSString * __value;
  NSString * __label;

  BOOL __id_isset;
  BOOL __type_isset;
  BOOL __value_isset;
  BOOL __label_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int64_t id;
@property (nonatomic, getter=type, setter=setType:) int type;
@property (nonatomic, retain, getter=value, setter=setValue:) NSString * value;
@property (nonatomic, retain, getter=label, setter=setLabel:) NSString * label;
#endif

- (id) initWithId: (int64_t) id type: (int) type value: (NSString *) value label: (NSString *) label;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int64_t) id;
- (void) setId: (int64_t) id;
- (BOOL) idIsSet;

- (int) type;
- (void) setType: (int) type;
- (BOOL) typeIsSet;

- (NSString *) value;
- (void) setValue: (NSString *) value;
- (BOOL) valueIsSet;

- (NSString *) label;
- (void) setLabel: (NSString *) label;
- (BOOL) labelIsSet;

@end

@interface UserPhone : NSObject <NSCoding> {
  int64_t __id;
  int __type;
  NSString * __value;
  NSString * __label;

  BOOL __id_isset;
  BOOL __type_isset;
  BOOL __value_isset;
  BOOL __label_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int64_t id;
@property (nonatomic, getter=type, setter=setType:) int type;
@property (nonatomic, retain, getter=value, setter=setValue:) NSString * value;
@property (nonatomic, retain, getter=label, setter=setLabel:) NSString * label;
#endif

- (id) initWithId: (int64_t) id type: (int) type value: (NSString *) value label: (NSString *) label;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int64_t) id;
- (void) setId: (int64_t) id;
- (BOOL) idIsSet;

- (int) type;
- (void) setType: (int) type;
- (BOOL) typeIsSet;

- (NSString *) value;
- (void) setValue: (NSString *) value;
- (BOOL) valueIsSet;

- (NSString *) label;
- (void) setLabel: (NSString *) label;
- (BOOL) labelIsSet;

@end

@interface UserMail : NSObject <NSCoding> {
  int64_t __id;
  int __type;
  NSString * __value;
  NSString * __label;

  BOOL __id_isset;
  BOOL __type_isset;
  BOOL __value_isset;
  BOOL __label_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int64_t id;
@property (nonatomic, getter=type, setter=setType:) int type;
@property (nonatomic, retain, getter=value, setter=setValue:) NSString * value;
@property (nonatomic, retain, getter=label, setter=setLabel:) NSString * label;
#endif

- (id) initWithId: (int64_t) id type: (int) type value: (NSString *) value label: (NSString *) label;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int64_t) id;
- (void) setId: (int64_t) id;
- (BOOL) idIsSet;

- (int) type;
- (void) setType: (int) type;
- (BOOL) typeIsSet;

- (NSString *) value;
- (void) setValue: (NSString *) value;
- (BOOL) valueIsSet;

- (NSString *) label;
- (void) setLabel: (NSString *) label;
- (BOOL) labelIsSet;

@end

@interface UserInfo : NSObject <NSCoding> {
  int64_t __id;
  NSString * __name;
  NSString * __intro;
  NSData * __picture;
  NSArray * __userLinkList;
  NSArray * __userPhoneList;
  NSArray * __userMailList;

  BOOL __id_isset;
  BOOL __name_isset;
  BOOL __intro_isset;
  BOOL __picture_isset;
  BOOL __userLinkList_isset;
  BOOL __userPhoneList_isset;
  BOOL __userMailList_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int64_t id;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=intro, setter=setIntro:) NSString * intro;
@property (nonatomic, retain, getter=picture, setter=setPicture:) NSData * picture;
@property (nonatomic, retain, getter=userLinkList, setter=setUserLinkList:) NSArray * userLinkList;
@property (nonatomic, retain, getter=userPhoneList, setter=setUserPhoneList:) NSArray * userPhoneList;
@property (nonatomic, retain, getter=userMailList, setter=setUserMailList:) NSArray * userMailList;
#endif

- (id) initWithId: (int64_t) id name: (NSString *) name intro: (NSString *) intro picture: (NSData *) picture userLinkList: (NSArray *) userLinkList userPhoneList: (NSArray *) userPhoneList userMailList: (NSArray *) userMailList;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int64_t) id;
- (void) setId: (int64_t) id;
- (BOOL) idIsSet;

- (NSString *) name;
- (void) setName: (NSString *) name;
- (BOOL) nameIsSet;

- (NSString *) intro;
- (void) setIntro: (NSString *) intro;
- (BOOL) introIsSet;

- (NSData *) picture;
- (void) setPicture: (NSData *) picture;
- (BOOL) pictureIsSet;

- (NSArray *) userLinkList;
- (void) setUserLinkList: (NSArray *) userLinkList;
- (BOOL) userLinkListIsSet;

- (NSArray *) userPhoneList;
- (void) setUserPhoneList: (NSArray *) userPhoneList;
- (BOOL) userPhoneListIsSet;

- (NSArray *) userMailList;
- (void) setUserMailList: (NSArray *) userMailList;
- (BOOL) userMailListIsSet;

@end

@interface StatusPost : NSObject <NSCoding> {
  NSString * __content;
  NSArray * __tagList;

  BOOL __content_isset;
  BOOL __tagList_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=content, setter=setContent:) NSString * content;
@property (nonatomic, retain, getter=tagList, setter=setTagList:) NSArray * tagList;
#endif

- (id) initWithContent: (NSString *) content tagList: (NSArray *) tagList;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) content;
- (void) setContent: (NSString *) content;
- (BOOL) contentIsSet;

- (NSArray *) tagList;
- (void) setTagList: (NSArray *) tagList;
- (BOOL) tagListIsSet;

@end

@interface StatusComment : NSObject <NSCoding> {
  int64_t __id;
  int64_t __authorID;
  NSString * __authorName;
  timestamp __date;
  NSString * __content;

  BOOL __id_isset;
  BOOL __authorID_isset;
  BOOL __authorName_isset;
  BOOL __date_isset;
  BOOL __content_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int64_t id;
@property (nonatomic, getter=authorID, setter=setAuthorID:) int64_t authorID;
@property (nonatomic, retain, getter=authorName, setter=setAuthorName:) NSString * authorName;
@property (nonatomic, getter=date, setter=setDate:) timestamp date;
@property (nonatomic, retain, getter=content, setter=setContent:) NSString * content;
#endif

- (id) initWithId: (int64_t) id authorID: (int64_t) authorID authorName: (NSString *) authorName date: (timestamp) date content: (NSString *) content;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int64_t) id;
- (void) setId: (int64_t) id;
- (BOOL) idIsSet;

- (int64_t) authorID;
- (void) setAuthorID: (int64_t) authorID;
- (BOOL) authorIDIsSet;

- (NSString *) authorName;
- (void) setAuthorName: (NSString *) authorName;
- (BOOL) authorNameIsSet;

- (timestamp) date;
- (void) setDate: (timestamp) date;
- (BOOL) dateIsSet;

- (NSString *) content;
- (void) setContent: (NSString *) content;
- (BOOL) contentIsSet;

@end

@interface Status : NSObject <NSCoding> {
  int64_t __id;
  int64_t __authorID;
  NSString * __authorName;
  timestamp __date;
  NSString * __content;
  int64_t __commentCount;
  NSArray * __commentList;

  BOOL __id_isset;
  BOOL __authorID_isset;
  BOOL __authorName_isset;
  BOOL __date_isset;
  BOOL __content_isset;
  BOOL __commentCount_isset;
  BOOL __commentList_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int64_t id;
@property (nonatomic, getter=authorID, setter=setAuthorID:) int64_t authorID;
@property (nonatomic, retain, getter=authorName, setter=setAuthorName:) NSString * authorName;
@property (nonatomic, getter=date, setter=setDate:) timestamp date;
@property (nonatomic, retain, getter=content, setter=setContent:) NSString * content;
@property (nonatomic, getter=commentCount, setter=setCommentCount:) int64_t commentCount;
@property (nonatomic, retain, getter=commentList, setter=setCommentList:) NSArray * commentList;
#endif

- (id) initWithId: (int64_t) id authorID: (int64_t) authorID authorName: (NSString *) authorName date: (timestamp) date content: (NSString *) content commentCount: (int64_t) commentCount commentList: (NSArray *) commentList;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int64_t) id;
- (void) setId: (int64_t) id;
- (BOOL) idIsSet;

- (int64_t) authorID;
- (void) setAuthorID: (int64_t) authorID;
- (BOOL) authorIDIsSet;

- (NSString *) authorName;
- (void) setAuthorName: (NSString *) authorName;
- (BOOL) authorNameIsSet;

- (timestamp) date;
- (void) setDate: (timestamp) date;
- (BOOL) dateIsSet;

- (NSString *) content;
- (void) setContent: (NSString *) content;
- (BOOL) contentIsSet;

- (int64_t) commentCount;
- (void) setCommentCount: (int64_t) commentCount;
- (BOOL) commentCountIsSet;

- (NSArray *) commentList;
- (void) setCommentList: (NSArray *) commentList;
- (BOOL) commentListIsSet;

@end

@interface Task : NSObject <NSCoding> {
  int64_t __id;
  NSString * __name;
  NSString * __intro;
  int __cid;
  timestamp __begin_time;
  timestamp __end_time;
  UserInfo * __owner;
  NSArray * __user_apply_list;
  NSArray * __user_accept_list;
  NSArray * __user_reject_list;

  BOOL __id_isset;
  BOOL __name_isset;
  BOOL __intro_isset;
  BOOL __cid_isset;
  BOOL __begin_time_isset;
  BOOL __end_time_isset;
  BOOL __owner_isset;
  BOOL __user_apply_list_isset;
  BOOL __user_accept_list_isset;
  BOOL __user_reject_list_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int64_t id;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=intro, setter=setIntro:) NSString * intro;
@property (nonatomic, getter=cid, setter=setCid:) int cid;
@property (nonatomic, getter=begin_time, setter=setBegin_time:) timestamp begin_time;
@property (nonatomic, getter=end_time, setter=setEnd_time:) timestamp end_time;
@property (nonatomic, retain, getter=owner, setter=setOwner:) UserInfo * owner;
@property (nonatomic, retain, getter=user_apply_list, setter=setUser_apply_list:) NSArray * user_apply_list;
@property (nonatomic, retain, getter=user_accept_list, setter=setUser_accept_list:) NSArray * user_accept_list;
@property (nonatomic, retain, getter=user_reject_list, setter=setUser_reject_list:) NSArray * user_reject_list;
#endif

- (id) initWithId: (int64_t) id name: (NSString *) name intro: (NSString *) intro cid: (int) cid begin_time: (timestamp) begin_time end_time: (timestamp) end_time owner: (UserInfo *) owner user_apply_list: (NSArray *) user_apply_list user_accept_list: (NSArray *) user_accept_list user_reject_list: (NSArray *) user_reject_list;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int64_t) id;
- (void) setId: (int64_t) id;
- (BOOL) idIsSet;

- (NSString *) name;
- (void) setName: (NSString *) name;
- (BOOL) nameIsSet;

- (NSString *) intro;
- (void) setIntro: (NSString *) intro;
- (BOOL) introIsSet;

- (int) cid;
- (void) setCid: (int) cid;
- (BOOL) cidIsSet;

- (timestamp) begin_time;
- (void) setBegin_time: (timestamp) begin_time;
- (BOOL) begin_timeIsSet;

- (timestamp) end_time;
- (void) setEnd_time: (timestamp) end_time;
- (BOOL) end_timeIsSet;

- (UserInfo *) owner;
- (void) setOwner: (UserInfo *) owner;
- (BOOL) ownerIsSet;

- (NSArray *) user_apply_list;
- (void) setUser_apply_list: (NSArray *) user_apply_list;
- (BOOL) user_apply_listIsSet;

- (NSArray *) user_accept_list;
- (void) setUser_accept_list: (NSArray *) user_accept_list;
- (BOOL) user_accept_listIsSet;

- (NSArray *) user_reject_list;
- (void) setUser_reject_list: (NSArray *) user_reject_list;
- (BOOL) user_reject_listIsSet;

@end

@interface typeConstants : NSObject {
}
@end
